{"version":3,"sources":["components/Editor.js","hooks/useLocalStorge.js","components/App.js","index.js"],"names":["Editor","props","language","displayName","value","onChange","useState","open","setOpen","className","type","onClick","prevOpen","icon","faCompressAlt","faExpandAlt","onBeforeChange","editor","data","showHint","completeSingle","options","lineWrapping","lint","mode","theme","lineNumbers","globalVars","smartIndent","foldGutter","autoCloseTags","matchBrackets","autoCloseBrackets","autoRefresh","hintOptions","useLocalStorge","key","initialValue","prefixedKey","jsonValue","localStorage","getItem","JSON","parse","setValue","useEffect","setItem","stringify","App","html","setHtml","css","setCss","js","setJs","srcDoc","setSrcDoc","timeout","setTimeout","clearTimeout","useStyles","makeStyles","root","position","bottom","spacing","right","ScrollTop","children","window","classes","trigger","useScrollTrigger","target","undefined","disableHysteresis","threshold","Zoom","in","event","anchor","ownerDocument","document","querySelector","scrollIntoView","behavior","block","role","Fragment","CssBaseline","AppBar","Toolbar","Typography","variant","component","Link","underline","href","preventDefault","color","id","Container","maxWidth","title","sandbox","frameBorder","width","height","Fab","size","aria-label","ReactDOM","render","StrictMode","getElementById"],"mappings":"0SAee,SAASA,EAAOC,GAAQ,IAG/BC,EAIAD,EAJAC,SACAC,EAGAF,EAHAE,YACAC,EAEAH,EAFAG,MACAC,EACAJ,EADAI,SAN8B,EASVC,oBAAS,GATC,mBAS3BC,EAT2B,KASrBC,EATqB,KAelC,OACI,yBAAKC,UAAS,2BAAsBF,EAAO,GAAK,cAE5C,yBAAKE,UAAU,gBACVN,EACD,4BACIO,KAAK,SACLD,UAAU,sBACVE,QAAU,kBAAMH,GAAQ,SAAAI,GAAQ,OAAKA,OAErC,kBAAC,IAAD,CAAiBC,KAAMN,EAAOO,IAAgBC,QAGtD,kBAAC,aAAD,CACIC,eAnBZ,SAAsBC,EAAQC,EAAMd,GAChCa,EAAOE,SAAS,CAAEC,gBAAgB,IAClCf,EAASD,IAkBDA,MAAOA,EACPK,UAAU,sBACVY,QAAS,CACLC,cAAc,EACdC,MAAM,EACNC,KAAMtB,EACNuB,MAAO,WACPC,aAAa,EACbC,YAAY,EACZC,aAAa,EACbC,YAAY,EACZC,eAAe,EACfC,eAAe,EACfC,mBAAmB,EACnBC,aAAY,EACZC,aAAa,MCxDlB,SAASC,EAAeC,EAAKC,GAExC,IAAMC,EAJK,SAIkBF,EAFyB,EAI5B9B,oBAAS,WAC/B,IAAMiC,EAAYC,aAAaC,QAAQH,GAEvC,OAAiB,MAAbC,EACOG,KAAKC,MAAMJ,GAGM,oBAAjBF,EACAA,IAEAA,KAduC,mBAI/CjC,EAJ+C,KAIxCwC,EAJwC,KAsBtD,OAJAC,qBAAW,WACPL,aAAaM,QAAQR,EAAaI,KAAKK,UAAU3C,MAClD,CAACkC,EAAalC,IAEV,CAACA,EAAOwC,G,uHCTJ,SAASI,EAAI/C,GAAQ,IAAD,EAETkC,EAAe,OAAO,IAFb,mBAE1Bc,EAF0B,KAEpBC,EAFoB,OAGXf,EAAe,MAAM,IAHV,mBAG1BgB,EAH0B,KAGrBC,EAHqB,OAIbjB,EAAe,KAAK,IAJP,mBAI1BkB,EAJ0B,KAItBC,EAJsB,OAKLhD,mBAAS,IALJ,mBAK1BiD,EAL0B,KAKlBC,EALkB,KAOjCX,qBAAU,WACR,IAAMY,EAAUC,YAAW,WACzBF,EAAU,iCAAD,OAECP,EAFD,mCAGEE,EAHF,qCAIGE,EAJH,wCAOT,KACF,OAAO,kBAAMM,aAAaF,MACzB,CAACR,EAAME,EAAKE,IAEf,IAAMO,EAAYC,aAAW,SAACpC,GAAD,MAAY,CACvCqC,KAAM,CACJC,SAAU,QACVC,OAAQvC,EAAMwC,QAAQ,GACtBC,MAAOzC,EAAMwC,QAAQ,QAIzB,SAASE,EAAUlE,GAAQ,IACjBmE,EAAqBnE,EAArBmE,SAAUC,EAAWpE,EAAXoE,OACZC,EAAUV,IAIVW,EAAUC,YAAiB,CAC/BC,OAAQJ,EAASA,SAAWK,EAC5BC,mBAAmB,EACnBC,UAAW,MAWb,OACE,kBAACC,EAAA,EAAD,CAAMC,GAAIP,GACR,yBAAK5D,QAVW,SAACoE,GACnB,IAAMC,GAAUD,EAAMN,OAAOQ,eAAiBC,UAAUC,cAAc,uBAElEH,GACFA,EAAOI,eAAe,CAAEC,SAAU,SAAUC,MAAO,YAMxBC,KAAK,eAAe9E,UAAW6D,EAAQR,MAC/DM,IAeT,OACE,kBAAC,IAAMoB,SAAP,KAEM,kBAACC,EAAA,EAAD,MACJ,kBAACC,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,KACA,kBAAC,IAAD,MACA,kBAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKC,UAAU,KAAKrF,UAAU,QAClD,kBAACsF,EAAA,EAAD,CAAMC,UAAU,OAAOC,KAAK,mBAAmBtF,QAT9B,SAACoE,GAAD,OAAWA,EAAMmB,kBASsCC,MAAM,WAA9E,YAKF,kBAACR,EAAA,EAAD,CAASS,GAAG,uBACZ,kBAACC,EAAA,EAAD,CAAYC,SAAS,KAAK7F,UAAU,aACpC,yBAAKA,UAAU,iBACf,kBAACT,EAAD,CACEE,SAAS,MACTC,YAAY,OACZC,MAAO6C,EACP5C,SAAU6C,IAGZ,kBAAClD,EAAD,CACEE,SAAS,MACTC,YAAY,MACZC,MAAO+C,EACP9C,SAAU+C,IAEZ,kBAACpD,EAAD,CACEE,SAAS,aACTC,YAAY,KACZC,MAAOiD,EACPhD,SAAUiD,KAGd,yBAAK7C,UAAU,QACb,4BACE8C,OAAUA,EACVgD,MAAM,SACNC,QAAQ,gBACRC,YAAY,IACZC,MAAM,OACNC,OAAO,WAIT,kBAACxC,EAAclE,EACb,kBAAC2G,EAAA,EAAD,CAAKT,MAAM,YAAYU,KAAK,QAAQC,aAAW,sBAC7C,kBAAC,IAAD,SC/HVC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACjE,EAAD,OAEFkC,SAASgC,eAAe,W","file":"static/js/main.5bfa5793.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\nimport  'codemirror/lib/codemirror.css';\r\nimport 'codemirror/theme/material.css';\r\nimport 'codemirror/mode/xml/xml';\r\nimport 'codemirror/mode/javascript/javascript';\r\nimport 'codemirror/mode/css/css';\r\nimport 'codemirror/addon/hint/show-hint';\r\nimport 'codemirror/addon/hint/anyword-hint';\r\nimport 'codemirror/addon/hint/html-hint';\r\nimport 'codemirror/addon/hint/css-hint';\r\nimport 'codemirror/addon/hint/javascript-hint';\r\nimport {Controlled as ControlledEditor} from 'react-codemirror2';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport {faCompressAlt, faExpandAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport default function Editor(props) {\r\n\r\n    const {\r\n        language,\r\n        displayName ,\r\n        value,\r\n        onChange\r\n    } = props\r\n    \r\n    const [open, setOpen] = useState(true);\r\n    function handleChange(editor, data, value){\r\n        editor.showHint({ completeSingle: false });\r\n        onChange(value);\r\n    }\r\n\r\n    return (\r\n        <div className={`editor-container ${open ? '' : 'collapsed'}`}>\r\n            \r\n            <div className=\"editor-title\">\r\n                {displayName}\r\n                <button\r\n                    type=\"button\"\r\n                    className=\"expend-collapse-btn\"\r\n                    onClick={ () => setOpen(prevOpen => !prevOpen)}\r\n                >\r\n                    <FontAwesomeIcon icon={open ? faCompressAlt : faExpandAlt}/>\r\n                </button>\r\n            </div>\r\n            <ControlledEditor \r\n                onBeforeChange={handleChange}\r\n                value={value}\r\n                className=\"code-mirror-wrapper\"\r\n                options={{\r\n                    lineWrapping: true,\r\n                    lint: true,\r\n                    mode: language,\r\n                    theme: 'material',\r\n                    lineNumbers: true,\r\n                    globalVars: true,\r\n                    smartIndent: true,\r\n                    foldGutter: true,\r\n                    autoCloseTags: true,\r\n                    matchBrackets: true,\r\n                    autoCloseBrackets: true,\r\n                    autoRefresh:true,\r\n                    hintOptions: true\r\n                    }}\r\n\r\n            />\r\n        </div>\r\n    )\r\n}\r\n","import {useEffect, useState} from 'react'\r\n\r\nconst PREFIX = 'eCode-'\r\n\r\nexport default function useLocalStorge(key, initialValue) {\r\n\r\n    const prefixedKey = PREFIX + key;\r\n\r\n    const [value, setValue] = useState(() => {\r\n        const jsonValue = localStorage.getItem(prefixedKey);\r\n\r\n        if (jsonValue != null) {\r\n            return JSON.parse(jsonValue)\r\n        };\r\n\r\n        if (typeof initialValue === 'function') {\r\n            return initialValue()\r\n        } else {\r\n            return initialValue\r\n        }\r\n    })\r\n\r\n    useEffect( () => {\r\n        localStorage.setItem(prefixedKey, JSON.stringify(value))\r\n    }, [prefixedKey, value])\r\n\r\n    return [value, setValue]\r\n}\r\n","import React, { useState, useEffect} from 'react';\nimport Editor from './Editor';\nimport useLocalStorge from '../hooks/useLocalStorge'\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport useScrollTrigger from '@material-ui/core/useScrollTrigger';\nimport Container from '@material-ui/core/Container';\nimport Fab from '@material-ui/core/Fab';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport Zoom from '@material-ui/core/Zoom';\nimport CodeIcon from '@material-ui/icons/Code';\nimport Link from '@material-ui/core/Link';\n\nexport default function App(props) {\n\n  const [html, setHtml] = useLocalStorge('html','');\n  const [css, setCss] = useLocalStorge('css','');\n  const [js, setJs] = useLocalStorge('js','');\n  const [srcDoc, setSrcDoc] = useState('');\n\n  useEffect(() => {\n    const timeout = setTimeout(() => {\n      setSrcDoc(`\n      <html>\n        <body>${html}</body>\n        <style>${css}</style>\n        <script>${js}</script>\n        </html>\n    `)\n    },250)\n    return () => clearTimeout(timeout)\n  }, [html, css, js])\n\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      position: 'fixed',\n      bottom: theme.spacing(2),\n      right: theme.spacing(2),\n    },\n  }));\n  \n  function ScrollTop(props) {\n    const { children, window } = props;\n    const classes = useStyles();\n    // Note that you normally won't need to set the window ref as useScrollTrigger\n    // will default to window.\n    // This is only being set here because the demo is in an iframe.\n    const trigger = useScrollTrigger({\n      target: window ? window() : undefined,\n      disableHysteresis: true,\n      threshold: 100,\n    });\n  \n    const handleClick = (event) => {\n      const anchor = (event.target.ownerDocument || document).querySelector('#back-to-top-anchor');\n  \n      if (anchor) {\n        anchor.scrollIntoView({ behavior: 'smooth', block: 'center' });\n      }\n    };\n  \n    return (\n      <Zoom in={trigger}>\n        <div onClick={handleClick} role=\"presentation\" className={classes.root}>\n          {children}\n        </div>\n      </Zoom>\n    );\n  }\n  \n  ScrollTop.propTypes = {\n    children: PropTypes.element.isRequired,\n    /**\n     * Injected by the documentation to work in an iframe.\n     * You won't need it on your project.\n     */\n    window: PropTypes.func,\n  };\n  const preventDefault = (event) => event.preventDefault();\n  return (\n    <React.Fragment>\n\n          <CssBaseline />\n      <AppBar>\n        <Toolbar>\n        <CodeIcon/>\n        <Typography variant=\"h6\" component=\"h3\" className=\"logo\">\n        <Link underline=\"none\" href=\"https://ecode.cf\" onClick={preventDefault} color=\"inherit\">eCode</Link>\n        </Typography>        \n        </Toolbar>\n      \n      </AppBar>\n      <Toolbar id=\"back-to-top-anchor\" />\n      <Container  maxWidth=\"xl\" className=\"container\">\n      <div className=\"pane top-pane\">\n      <Editor \n        language=\"xml\"\n        displayName=\"HTML\"\n        value={html}\n        onChange={setHtml}\n\n      />\n      <Editor \n        language=\"css\"\n        displayName=\"CSS\"\n        value={css}\n        onChange={setCss}      \n      />\n      <Editor \n        language=\"javascript\"\n        displayName=\"JS\"\n        value={js}\n        onChange={setJs}\n      />\n    </div>\n    <div className=\"pane\">\n      <iframe \n        srcDoc = {srcDoc}\n        title=\"output\"\n        sandbox=\"allow-scripts\"\n        frameBorder=\"0\"\n        width=\"100%\"\n        height=\"100%\"\n        />\n    </div>\n      </Container>\n      <ScrollTop {...props}>\n        <Fab color=\"secondary\" size=\"small\" aria-label=\"scroll back to top\">\n          <KeyboardArrowUpIcon />\n        </Fab>\n      </ScrollTop>\n      </React.Fragment>\n\n    \n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}